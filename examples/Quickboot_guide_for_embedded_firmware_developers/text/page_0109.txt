19h).

—Secondary System Description Table (SSDT). Modular extensions of
the DSDT. These are used for multiple hardware support. Example:
depending on the CPU installed, they may have different features
that must be defined. They also can be used per OS expectation to
allow for new features for newer operating systems and backward

compatibility for older ones.

—Multiple APIC Description Table (MADT). Describes IOXAPICs and
[.ocal CPU APICs. In PIC mode versus APIC mode.

—Smart Battery Table (SBST). OEM-specific table depending on the
battery mated to the system.

—Embedded Controller Boot Resources Table (ECDT). Optionally
describes resources used by the embedded controller. The table
provides earlier access to the EC than if the system has to wait until
the OS loads the EC drivers later in the boot.

—Boot Graphics Resource Table (BGRT). Describes location of the
board splash screen for OS to load during OS boot to provide a

seamless boot experience between the BIOS and OS.

—Firmware Performance Data Table (FPDT). Describes pre-OS
firmware execution time to the OS or tools without the need for a

wall clock or stopwatch.

There are many server and NUMA system tables that provide the operating
system with enhanced details of the capabilities of dual and multisocketed

systems. These tables include the System Locality Distance Information
The following describes various system tables.

nineteen h). The Secondary System Description Table, or S S D T, consists of modular extensions of the D S D T. These tables are used for multiple hardware support. For example, depending on the C P U installed, they may have different features that must be defined. They also can be used per O S expectation to allow for new features for newer operating systems and backward compatibility for older ones.

The Multiple A P I C Description Table, or M A D T, describes I O x A P I C s and Local C P U A P I C s. It addresses P I C mode versus A P I C mode.

The Smart Battery Table, or S B S T, is an O E M specific table depending on the battery mated to the system.

The Embedded Controller Boot Resources Table, or E C D T, optionally describes resources used by the embedded controller. This table provides earlier access to the E C than if the system has to wait until the O S loads the E C drivers later in the boot.

The Boot Graphics Resource Table, or B G R T, describes the location of the board splash screen for the O S to load during O S boot. This provides a seamless boot experience between the B I O S and the O S.

The Firmware Performance Data Table, or F P D T, describes pre O S firmware execution time to the O S or tools without the need for a wall clock or stopwatch.

There are many server and N U M A system tables that provide the operating system with enhanced details of the capabilities of dual and multi socketed systems. These tables include the System Locality Distance Information.
The Secondary System Description Table, or S S D T, functions as a modular extension to the Differentiated System Description Table, or D S D T, within the Advanced Configuration and Power Interface, or A C P I, framework. Its core purpose lies in supporting diverse hardware configurations and enabling system adaptability. Specifically, S S D T instances are dynamically generated by the firmware based on factors such as the installed Central Processing Unit, or C P U, model, which may exhibit unique features, or to align with specific Operating System, or O S, expectations. This modularity is paramount for introducing new hardware capabilities while maintaining backward compatibility with previous O S versions, allowing for a flexible and extensible hardware abstraction layer that evolves with technology.

The Multiple Advanced Programmable Interrupt Controller Description Table, known as M A D T, serves as the authoritative source for the O S to comprehend the system's interrupt topology. It meticulously describes both I O x A P I Cs, which manage interrupts originating from peripheral devices, and Local C P U A P I Cs, responsible for delivering interrupts directly to individual C P U cores. This table is critical for configuring interrupt routing, enabling efficient and scalable interrupt dispatch in multi processor systems. The distinction between P I C mode, a legacy interrupt handling mechanism, and the more advanced A P I C mode, which supports symmetric multiprocessing and multiple interrupt sources per C P U, is also conveyed, guiding the O S in adopting the most appropriate interrupt management strategy for optimized performance and concurrency.

The Smart Battery Table, or S B S T, is an Original Equipment Manufacturer, or O E M, specific A C P I table that provides detailed information about the intelligent battery system integrated into a portable device. This table is fundamental for sophisticated power management. By exposing data such as battery capacity, charge state, and health metrics, the S B S T enables the O S to implement intelligent power-saving strategies, accurately display remaining battery life, and manage charging cycles. This direct communication between the battery's internal microcontroller and the O S, facilitated by the S B S T, is crucial for extending battery longevity and enhancing the user experience in mobile computing environments.

The Embedded Controller Boot Resources Table, or E C D T, addresses the challenge of early system initialization by providing the O S with vital information about resources managed by the embedded controller. An embedded controller is a specialized microcontroller often found in notebooks and other systems, handling low-level functions like keyboard input, power state transitions, and thermal monitoring. The E C D T's significance lies in allowing the O S to access these embedded controller resources much earlier in the boot sequence, before the system's main embedded controller drivers are fully loaded. This preemptive access can prevent delays, ensure correct hardware configuration from the onset, and facilitate a smoother transition from firmware to O S control.

The Boot Graphics Resource Table, or B G R T, is designed to ensure a seamless visual transition during the system boot process. This table specifies the memory location of the splash screen image that was displayed by the system's Basic Input Output System, or B I O S, or Unified Extensible Firmware Interface, or U E F I, firmware. By providing this information, the O S can either continue to display the same image or transition gracefully to its own boot animation without an abrupt flicker or a sudden change in display resolution. This fundamental principle of visual continuity significantly enhances the perceived polish and user experience during system startup, bridging the visual gap between the firmware and the O S.

The Firmware Performance Data Table, or F P D T, is an invaluable tool for system performance analysis and optimization, particularly concerning the boot process. This table captures and exposes pre-O S firmware execution timings, essentially providing a granular breakdown of how long various stages of the B I O S or U E F I startup take. The availability of this data directly from the firmware eliminates the need for external measurement tools, such as physical stopwatches or separate profiling hardware. Engineers and developers leverage the F P D T to identify bottlenecks in the firmware initialization sequence, enabling precise optimization efforts that can significantly reduce overall system boot times.

Beyond these, modern server and Non Uniform Memory Access, or N U M A, systems utilize a sophisticated set of A C P I tables to describe their complex architectures. These tables, which include critical components like the System Locality Distance Information, provide the O S with an intricate topological map of the system's memory and Central Processing Unit, or C P U, nodes. This mapping includes crucial details such as the "distance," which represents the latency, between different N U M A nodes. The underlying principle here is to enable the O S scheduler and memory manager to make highly informed decisions regarding process placement and memory allocation. By understanding the memory access latencies, the O S can strategically assign processes to C P U cores that are topologically "closer" to the memory regions they frequently access, thereby minimizing N U M A penalties, optimizing cache utilization, and ultimately maximizing overall system performance and throughput in these high-scale, multi socketed computing environments.

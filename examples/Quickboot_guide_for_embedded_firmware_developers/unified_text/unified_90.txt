The process of system resets and firmware execution is crucial in embedded systems, particularly in the context of a technique known as "shadowing." Shadowing involves copying firmware from nonvolatile flash storage into random access memory, or Ram, to improve execution performance. This is necessary because the read performance of nonvolatile storage is much slower than that of Ram. When a system is initialized, it starts executing directly from the nonvolatile flash storage, a mode known as execute in place, or X I P. However, to optimize performance, the firmware is copied into Ram, allowing the system to execute the firmware from the faster memory.In the context of Intel architecture platforms, shadowing is a common optimization technique. The shadowing process involves having the same contents in both Ram and flash, with the address decoders prioritizing the Ram copy. This allows the system to execute the firmware from Ram instead of the slower flash memory. The firmware may also be compressed to reduce the size of the nonvolatile storage required. However, the processor cannot execute a compressed image directly, so decompression is necessary before execution.There is a trade-off between the size of the data to be shadowed and the act of decompression. The decompression algorithm may take longer to load and execute than it would for the image to remain uncompressed. Prefetchers in the processor, if enabled, may also speed up execution in place, and some systems on chips, or S o Cs, have internal nonvolatile Ram cache buffers to assist in pipelining the data from flash to the processor. Figure nine point three illustrates the memory map at initialization in real mode, indicating an accessibility limit of one megabyte.Before memory is initialized, data and code stacks are held in the processor cache. To transition to the main memory, a special caching mode must be exited, and the cache flushed. The stack must be set up before jumping into the shadowed portion of the B I O S, which now resides in memory. A memory location must be chosen for stack space, and enough memory must be allocated for the maximum stack size. If protected mode is used, the stack segment register, S S, and stack pointer register, E S P, must be correctly set to point to the allocated memory.The transfer to D Ram is a critical step, where the execution flow jumps into the newly prepared memory. If a memory test has not been performed prior to this jump, there could be significant issues, such as system failures or garbage data. It is essential to verify the memory integrity before transferring critical code and data to the new memory space.Memory transaction redirection is another crucial aspect of firmware shadowing. Intel chipsets often come with memory aliasing capabilities, allowing reads and writes to sections of memory below one megabyte to be routed to either D Ram or nonvolatile storage. The programmable attribute maps, or P A M s, control this aliasing and may need to be manipulated before, during, and after firmware shadowing. By utilizing the P A M registers, the E and F segments of the B I O S can be shadowed into memory, improving boot speed. The enables can be changed to direct reads to the flash device and writes to memory, allowing the data to be shadowed into memory. Once the B I O S code has been shadowed, the enables can be changed to read-only, directing memory reads to memory and preventing accidental overwrites.

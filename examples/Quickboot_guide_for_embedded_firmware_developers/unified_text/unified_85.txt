The system initialization process commences with an early phase executed by the BIOS or bootloader, with the primary objective of bringing the memory and processor cores into a functional state. This early initialization is often associated with the Unified Extensible Firmware Interface, or U E F I, and its constituent phases, namely the Security phase, also known as S E C, and the Pre E F I Initialization phase, or P E I. These phases are generally considered synonymous with the term "early initialization," irrespective of whether a legacy BIOS or a U E F I BIOS is employed, indicating a consistent initialization sequence from a hardware architecture perspective.During this early phase, the processor transitions to normal operating mode, invalidating its internal caches and translation lookaside buffers, or T L Bs, to ensure data integrity and consistent state management. The processor continues to boot in real mode, primarily for compatibility reasons, enabling legacy code execution, such as D O S, written many years ago. This legacy support is a critical design consideration for maintaining backward compatibility within the broader ecosystem of hardware and software.The "first power on" mode is a specialized subset of real mode, where the top twelve address lines are held high, facilitating memory aliasing. This allows the processor to execute code from nonvolatile storage, such as flash memory, as if it were located at the top of the addressable memory space. Normal operation of the firmware, typically implemented in B I O S, involves switching between real mode and flat protected mode, as required by the boot sequence. The flat mode runs thirty-two bit code, and the physical addresses are mapped directly to logical addresses, effectively disabling paging. The Interrupt Descriptor Table, or I D T, plays a pivotal role in interrupt handling, serving as the lookup mechanism for interrupt handlers.In a multicore system, the concept of single-threaded operation during the boot process is fundamental. The bootstrap processor, or B S P, is the C P U core/thread chosen to boot the normally single-threaded system firmware. Upon a system R E S E T event, all processors are brought to a known quiescent state, and the bootstrap processor accesses a semaphore flag bit within the chipset. It reads this flag to determine its readiness and, upon successful ascertainment, sets the flag, signaling its status to other processors. The bootstrap processor then initializes the main memory subsystem and activates the remaining application processors, referred to as A P s, to join the system.The early initialization phase also readies the I O peripherals' base address registers needed to configure the memory controller. The device-specific portion of an Intel architecture memory map is highly configurable, with most devices seen and accessed via a logical P C I bus hierarchy. Device control registers are mapped to a predefined I O or M M I O space and can be set up before the memory map is configured, allowing the early initial firmware to configure the memory map of the device needed to set up D Ram. Before D Ram can be configured, the firmware must establish the exact configuration of D Ram on the board, as described in the Intel architecture reference platform memory map.In contrast, S O C devices based on other processor architectures typically provide a static address map for all internal peripherals, with external devices connected via a bus interface. The bus-based devices are mapped to a memory range within the S O C address space, and these S O C devices usually provide a configurable chip select register, which can be set to specify the base address and size of the memory range enabled by the chip select. S O C s based on Intel architecture primarily use the logical P C I infrastructure for internal and external devices.The discussion highlights the importance of understanding the system initialization process, including the early phase, the role of the bootstrap processor, and the configuration of memory and I O devices. The Intel architecture reference platform memory map provides a detailed description of the memory organization, and the U E F I phases, such as S E C and P E I, play a crucial role in the early initialization sequence. The system's ability to boot in real mode and switch to protected mode, as well as the use of flat mode and interrupt handling, are essential aspects of the system's functionality.

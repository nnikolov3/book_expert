The Main Memory Address Range, referred to as system memory, is the memory available to the O S. However, parts of this address range may not be available for the O S to use, such as Stolen Memory or A C P I tables. These reserved memory regions are crucial for dedicated hardware functions or management structures, and their allocation is a fundamental aspect of platform initialization and O S boot processes. The mechanisms and structures by which the firmware communicates these reserved memory regions and hands off control of the remaining addressable space to the O S are often detailed within O S handoff structures, which will be discussed in more detail in Chapter eight.In addition to the Main Memory Address Range, the P C I Memory Address Range is a dedicated segment of the system's physical address space utilized during P C I enumeration. This process dynamically discovers and configures P C I devices by assigning memory-mapped input/output, or M M I O, regions. M M I O enables the C P U to interact with P C I devices by treating their internal registers as if they were locations in main memory, allowing direct load and store instructions to read from or write to these device-specific control and status registers. However, a significant architectural challenge arises in systems equipped with four gigabytes or greater of physical system D Ram. To circumvent this critical resource contention and ensure full accessibility to both P C I M M I O and the entire installed physical D Ram, a technique known as memory remapping is employed. This mechanism relocates the conflicting D Ram segment, mapping it to an address range positioned just above the four gigabyte mark, leveraging the capabilities of sixty-four bit addressing.Figure three point three illustrates how memory remapping works, providing a visual representation of the original linear address space where the P C I M M I O region overlays a portion of the D Ram. Following remapping, the diagram shows the D Ram segment logically moved to a higher address range, preserving both its integrity and the M M I O region's accessibility, thus resolving the address collision. This complex memory management is essential for ensuring the smooth operation of the system, and understanding these concepts is vital for effective system design and troubleshooting.During the initial phases of system startup, the system firmware often displays a splash screen, which is a graphical bitmap that hides the detailed diagnostic information generated during the hardware initialization and O S loading sequence. This practice is prevalent in consumer-oriented P C systems and is particularly ubiquitous in embedded systems, where a consistent and aesthetically pleasing visual presentation from the moment of power on is often a design requirement. The splash screen serves no functional or diagnostic value to the end user during the boot process but provides a polished and user-friendly experience.The system memory map, as illustrated in Figure three point three, provides a detailed representation of the complex organization of physical memory within a computer system. The diagram is divided into two main views: the Host System View and the Physical Memory, or Draw Controller View. The Host System View depicts the logical address space visible to the central processing unit and the operating system, showing a hierarchical breakdown of memory ranges. The Physical Memory View, on the other hand, provides the actual physical layout and assignment of memory blocks as seen by the memory controller.The diagram differentiates between "O S Visible greater than four G B" and "O S Visible less than four G B" memory, addressing the memory mapping complexities in systems that support more than four gigabytes of physical R A M. Memory above four gigabytes is typically only visible to a sixty-four bit operating system, while memory below four gigabytes is generally accessible by both thirty-two bit and sixty-four bit operating systems. The concept of "O S Invisible Reclaim G F X for reclaim" highlights a common design pattern in integrated graphics solutions where physical R A M is dynamically allocated for graphics processing unit usage but then can be "reclaimed" by the O S if no longer needed.The system also provides various types of status and error messages that offer valuable diagnostic information during the initialization process. These messages can be displayed on the screen, and the B I O S often has an option to turn off the splash screen to display these diagnostic messages. In cases where a hardware failure occurs before the graphics device is initialized, the B I O S or boot loader may display beep codes to help the user determine what has gone wrong. Additionally, for firmware developers working on a motherboard, processor, or chipset power-on, a P O S T code display is used to indicate the last code that is executed during the power-on self-test. Understanding these diagnostic messages and codes is essential for effective troubleshooting and system maintenance.

The computational architecture of modern systems relies on a hierarchical organization of memory to bridge the vast speed discrepancies between processing units and storage media. At the apex of this hierarchy lies the processor cache, a critically important local memory directly integrated with or in very close proximity to the C P U. This cache functions as a high-speed, temporary repository for data and instructions that the processor anticipates needing, or has recently accessed. Conceptually, it acts as a "short term memory" for the processing unit, vastly reducing the latency inherent in fetching data from slower main memory.During system runtime, the processor, often in conjunction with the operating system, employs sophisticated algorithms to manage the data within these cache ranges. The objective is to maximize cache hit rates, thereby providing the C P U with the fastest possible access to necessary information. Historically, processor cache required explicit enabling during system boot-up, often managed by the B I O S or operating system configuration. However, in contemporary systems, the cache is a perpetually enabled and integral component of the processor's operation. Early in the system's initialization sequence, during the initial B I O S phases, the cache can be temporarily configured to allocate a small stack space, facilitating the very first executions of firmware code before the full system memory infrastructure is fully operational.Beneath the C P U cache in the memory hierarchy resides system memory, commonly referred to as R A M. This is the primary working memory for the operating system and running applications, typically manifesting as modular D I M Ms. The evolution of system memory technology has seen a rapid progression over the decades, driven by the continuous demand for higher bandwidth and lower latency. This progression spans from early forms such as E D O D Ram and its burst-capable variant, B E D O D Ram, to S D Ram, which synchronized memory operations with the system clock, significantly enhancing performance. Each successive generation, including D D R, D D R two, D D R three, and the more recent D D R four, has introduced improvements in data transfer rates, power efficiency, and capacity, with D D R four representing a substantial leap forward in performance capabilities.When considering the continuum of memory speeds within a system, system main memory occupies an intermediate position. Its access time is significantly faster than that of non-volatile memory technologies, such as N V Ram flash chips used for firmware or configuration data, or large disk drives, which represent the slowest tier of storage. However, system memory is considerably slower than the ultra-fast C P U cache, which is designed for microsecond or nanosecond access times. This intermediate speed and relatively high capacity make system memory the optimal choice for the dynamic storage needs of operating systems and applications, balancing performance requirements with cost considerations for the broader platform market.To be ideal for execution of operating system and applications during runtime, memory D I M M S required a memory controller, formerly in the north bridge of the chipset, now integrated into the processor. Memory initialization can take between several milliseconds to several seconds, depending on the transition state of the system, coming from off or a sleep state. During the normal boot flow, once main memory is initialized by the system B I O S, the shadowing of the “rest of the B I O S” can take place. The memory is divided into a memory map for various usages by different subsystems; not all memory is used or available by the operating system. Eventually, the O S is loaded into main memory and the system is then “booted” from a B I O S point of view.Complementary Metal Oxide Semiconductor, or C M O S, in the context of system B I O S, refers specifically to a small, battery-backed S Ram chip, typically located within the south bridge or platform controller hub on older system architectures. While it is not inherently N V Ram, meaning its data is volatile without power, its battery backing provides the necessary continuous power to retain configuration data. This five hundred twelve bytes of S Ram serves as a persistent storage mechanism for the Real Time Clock data and other user-dependent or board-specific settings that must endure across system power transitions, even when the system is completely off.System B I O S Flash Memory, often interchangeably referred to as N V Ram, F W H for Firmware Hub, or S P I for Serial Peripheral Interface flash, represents a small, non-volatile Ram chip primarily dedicated to storing the B I O S code itself or the boot loader program. Unlike the battery-backed S Ram used for configuration data, flash memory is intrinsically non-volatile, meaning it retains its stored data without the need for continuous power. This characteristic makes it an ideal medium for the foundational firmware that initiates the entire system boot process. One advantage of flash memory is that it can be written to as the system powers up, allowing either the B I O S or boot loader to be stored in flash, as well as any data that the B I O S or boot loader may need during the boot process.The Real-Time Clock, or R T C, is available in most P C systems, and its internal registers and Ram are organized as two banks of one hundred twenty-eight bytes each. The R T C contains the C M O S, as well as a real-time clock, and consists of fourteen bytes used to set the time and date. The backup battery and the Ram are referred to as the C M O S battery and C M O S, respectively. A thirty-two-bit Intel architecture system has up to four gigabytes of address space, and if the Physical Address Extensions feature is available in the processor, up to thirty-six address bits are available, increasing the possible addressable memory space. The address space for the Intel System Controller Hub is illustrated as an example, demonstrating the complex memory hierarchy and management within modern computing systems.
